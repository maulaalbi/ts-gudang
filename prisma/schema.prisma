// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
id               Int       @id @default(autoincrement())
  user_public_id   String    @unique @default(uuid())
  firstName        String
  lastName         String
  email            String    @unique
  password         String
  role             String
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  



  @@map("users")
  warehouse Warehouse[] @relation(name: "AdminGudang")
}

model Warehouse {
  id                   Int       @id @default(autoincrement())
  public_warehouse_id  String    @unique @default(uuid())
  name                 String
  location             String
  adminGudangId  String     // Relasi ke Admin Gudang yang mencatat
  adminGudang    User       @relation(fields: [adminGudangId], references: [user_public_id], name: "AdminGudang")
  item                 Item[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map("warehouses")
}




model ItemOut {
  id             Int       @id @default(autoincrement())
  public_itemsOut_id String   @unique @default(uuid())
  itemId       String        // Relasi ke Barang
  item         Item     @relation(fields: [itemId], references: [public_item_id])
  quantity       Int        // Jumlah barang keluar
  timestamp      DateTime   @default(now())
  

  @@map("itemsOut")
}

model ItemIn {
  id            Int       @id @default(autoincrement())
  public_itemsIn_id String   @unique @default(uuid())
  itemId      String        // Relasi ke Barang
  item        Item     @relation(fields: [itemId], references: [public_item_id])
  quantity      Int        // Jumlah barang masuk
  timestamp     DateTime   @default(now())

  @@map("itemsIn")
}

model Item {
  id             Int       @id @default(autoincrement())
  public_item_id String   @unique @default(uuid())
  name           String
  description    String?
  stock          Int        @default(0)
  warehouseId    String        // Relasi ke Warehouse
  warehouse      Warehouse  @relation(fields: [warehouseId], references: [public_warehouse_id])
  itemIn    ItemIn[]
  itemOut   ItemOut[]

  @@map("items")
}



